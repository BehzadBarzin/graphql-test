import { Request, Response, NextFunction } from "express";

import { BaseError } from "../errors/base.error";
import { logger } from "../utils/logger";

export const errorHandler = (
  err: Error, // ðŸ‘ˆ This argument tells express that this middleware handles errors
  req: Request,
  res: Response,
  next: NextFunction
) => {
  // If the error is a 'BaseError' instance
  if (err instanceof BaseError) {
    logger.warn(`HTTP Error: (${err.statusCode}) ${err.message || ""}`);
    // We will send the errors array generated by the 'serializeErrors' method to the client
    return res.status(err.statusCode).send({ errors: err.serializeErrors() });
  }

  // Report error on the server
  logger.error("Internal Server Error: ", err);

  // If the error is not a 'CustomError' we will send a generic error message to the client
  return res.status(500).send({
    errors: [{ message: "Something went wrong" }],
  });
};
